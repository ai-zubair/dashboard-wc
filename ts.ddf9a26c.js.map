{"version":3,"sources":["src/ts/components/FancyTabs/fancyTabsContent.ts","src/ts/components/FancyTabs/FancyTabs.ts","src/ts/index.ts"],"names":[],"mappings":"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","file":"ts.ddf9a26c.js","sourceRoot":"..","sourcesContent":["export const FancyTabContent = `\n  <style>\n    :host {\n      display: flex;\n      flex-direction: column;\n      width: 100%;\n      height: 100%;\n      contain: content;\n      border-radius: 6px;\n      box-shadow: 0px 0px 10px 0px #444444;\n    }\n    .tab-container {\n      display: flex;\n      flex-direction: row;\n      width: 100%;\n      flex-basis: 10%;\n      overflow: scroll;\n      scrollbar-width: none;\n\n    }\n    .tab-container::-webkit-scrollbar{\n      display: none;\n      width: 0px;\n    }\n    ::slotted([slot=\"tab\"]){\n      width: auto;\n      padding: 10px;\n      border: none;\n      flex-basis: calc(100%/3);\n      color: black;\n      font-size: 20px;\n      background-color: #607D8B;\n      font-weight: 300;\n      font-family: 'Roboto', sans-serif;\n      transition: font-size 0.5s ease;\n      color : white;\n      outline: none;\n    }\n    @media screen and (max-width: 576px){\n      ::slotted([slot=\"tab\"]){\n        font-size: 14px;\n      }\n    }\n    ::slotted([slot=\"tab\"][active]){\n      font-weight: bolder;\n      background-color: white;\n      color: black;\n    }\n    ::slotted(:not([active])[slot=\"tab\"]:hover){\n      cursor: pointer;\n      background-color: #455A64;\n      font-size: 21px;\n      font-weight: bolder;\n    }\n    .panel-container {\n      flex-basis: 90%;\n      background-color: #fff;\n      padding: 10px;\n    }\n    ::slotted([slot=\"panel\"][active]){\n      width: 100%;\n      height: 100%;\n    }\n    ::slotted(:not([active])[slot=\"panel\"]){\n      display: none;\n    }\n  </style>\n\n  <div class=\"tab-container\" id=\"tab-container\">\n    <slot id=\"tab-slot\" name=\"tab\"></slot>\n  </div>\n  <div class=\"panel-container\" id=\"panel-container\">\n    <slot id=\"panel-slot\" name=\"panel\"></slot>\n  </div>\n`;","import { FancyTabContent } from \"./fancyTabsContent\";\nimport { TabMap } from \"./types\";\n\nclass FancyTabs extends HTMLElement{\n\n  public tabMap: TabMap = {};\n  public domContent: string = FancyTabContent;\n  public activeTabId: string = \"\";\n  public defaultActiveTabId: string = \"\";\n  public tabTitle: HTMLElement[] = [];\n  public tabPanel: HTMLElement[] = [];\n\n  constructor(){\n    super();\n    this.bindDomContent();\n  }\n\n  connectedCallback(): void{\n    const tabSlot = this.shadowRoot?.getElementById(\"tab-slot\") as HTMLSlotElement;\n    const panelSlot = this.shadowRoot?.getElementById(\"panel-slot\") as HTMLSlotElement;\n    this.tabTitle = tabSlot.assignedNodes({flatten: true}) as HTMLElement[];\n    this.tabPanel = panelSlot.assignedNodes({flatten: true}) as HTMLElement[];\n    this.createTabMap();\n    this.bindClickHandlers();\n  }\n\n  disconnectedCallback(): void{\n    this.tabTitle.forEach( tabTitle => {\n      tabTitle.removeEventListener(\"click\", this.handleTabTitleClick);\n    } )\n  }\n\n  attributeChangedCallback(): void{\n\n  }\n\n  bindDomContent = (): void => {\n    const contentTemplate = document.createElement(\"template\");\n    contentTemplate.innerHTML = this.domContent;\n    const shadowRoot = this.attachShadow({mode: \"open\"});\n    shadowRoot.appendChild(contentTemplate.content.cloneNode(true));\n  }\n\n  createTabMap = (): void => {\n    this.tabTitle.forEach( (tabTitle, tabTitleIndex) => {\n      const tabId = tabTitle.getAttribute(\"tabId\");\n      if(tabId){\n        if(tabTitleIndex === 0){\n          this.defaultActiveTabId = tabId;\n        }\n        this.tabMap[tabId] = {\n          tabTitle: tabTitle,\n          tabPanel: this.tabPanel[tabTitleIndex]\n        }\n        const isTabActive = tabTitle.hasAttribute(\"active\") ? true : false;\n        if(isTabActive){\n          this.setActiveTab(tabId);\n        }\n      }\n    })\n\n    if(!this.activeTabId){\n      this.setActiveTab(this.defaultActiveTabId);\n    }\n  }\n\n  bindClickHandlers = (): void => {\n    this.tabTitle.forEach( tabTitle => {\n      tabTitle.addEventListener(\"click\", this.handleTabTitleClick)\n    })\n  }\n\n  unsetActiveTab = (): void => {\n    const [activeTabTitle, activeTabPanel] = this.getActiveTab();\n    activeTabTitle.removeAttribute(\"active\");\n    activeTabPanel.removeAttribute(\"active\");\n  }\n\n  setActiveTab = ( tabId: string ): void => {\n    if(this.activeTabId){\n      this.unsetActiveTab();\n    }\n    this.activeTabId = tabId;\n    const [activeTabTitle,activeTabPanel] = this.getActiveTab();\n    activeTabTitle.setAttribute(\"active\",\"true\");\n    activeTabPanel.setAttribute(\"active\",\"true\");\n  }\n\n  getActiveTab = (): HTMLElement[] => {\n    return [\n      this.tabMap[this.activeTabId].tabTitle, \n      this.tabMap[this.activeTabId].tabPanel \n    ];\n  }\n\n  handleTabTitleClick = (event: MouseEvent): void => {\n    this.unsetActiveTab();\n    const targetTab = event.target as HTMLElement;\n    const targetTabId = targetTab.getAttribute(\"tabId\");\n    if(targetTabId){\n      this.setActiveTab(targetTabId);\n    }\n  }\n\n}\n\nexport { FancyTabs };","import { FancyTabs } from \"./components/FancyTabs/FancyTabs\";\n\ncustomElements.define(\"fancy-tabs\", FancyTabs);"]}